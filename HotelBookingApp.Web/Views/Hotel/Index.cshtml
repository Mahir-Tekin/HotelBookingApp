@model HotelIndexVM

@{
    ViewBag.Title = "Hotel List";
}

<!-- Filtreleme Çubuğu -->
<form id="filterForm">
    <div class="row">
        <div class="col-md-3">
            <label for="city">City</label>
            <input type="text" class="form-control" id="city" name="@nameof(HotelFilterRequest.City)" placeholder="Select City">
        </div>
        <div class="col-md-3">
            <label for="checkin">Check-in Date</label>
            <input type="date" class="form-control" id="checkin" name="@nameof(HotelFilterRequest.CheckInDate)">
        </div>
        <div class="col-md-3">
            <label for="checkout">Check-out Date</label>
            <input type="date" class="form-control" id="checkout" name="@nameof(HotelFilterRequest.CheckOutDate)">
        </div>
        <div class="col-md-3">
            <label for="guestCount">Guest Count</label>
            <input type="number" class="form-control" id="guestCount" name="@nameof(HotelFilterRequest.GuestCount)" min="1" value="1">
        </div>
    </div>
    <button type="button" class="btn btn-primary mt-3" onclick="filterHotels()">Filter</button>
</form>

<!-- Otel Kartları -->
<div id="HotelListContainer">
</div>



@section Scripts {
    <script>
        function increaseGuests() {
            let guestCount = document.getElementById("guestCount");
            guestCount.value = parseInt(guestCount.value) + 1;
        }

        function decreaseGuests() {
            let guestCount = document.getElementById("guestCount");
            if (parseInt(guestCount.value) > 1) {
                guestCount.value = parseInt(guestCount.value) - 1;
            }
        }

        async function filterHotels() {
            // Formdaki verileri topluyoruz
            const form = document.getElementById("filterForm");
            const formData = new FormData(form);

            // Form verilerini JSON formatına dönüştür
            let filterData = Object.fromEntries(formData.entries());

            // Boş string olan değerleri null olarak ayarla
            for (let key in filterData) {
                if (filterData[key] === "") {
                    filterData[key] = null;
                }
            }

            try {
                // Fetch API ile POST isteği gönder
                const response = await fetch('/Hotel/GetFilteredHotels', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(filterData) // JSON formatında veriyi gönderiyoruz
                });

                // Eğer cevap başarılı değilse hata fırlat
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }

                // Gelen HTML içeriği al ve sayfada göster
                const htmlContent = await response.text();
                document.getElementById("HotelListContainer").innerHTML = htmlContent;

            } catch (error) {
                console.error('Error fetching hotels:', error);
                alert('An error occurred while fetching hotel data.');
            }
        }

        document.addEventListener("DOMContentLoaded", function () {
            filterHotels();
        });
    </script>
}
